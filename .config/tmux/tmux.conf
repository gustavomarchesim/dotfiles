# ==========================
# Configurações Gerais
# ==========================

# Definir o terminal padrão como 'tmux-256color' para suporte a 256 cores
set-option -g default-terminal 'tmux-256color'

# Adicionar suporte a cores RGB no terminal Kitty
set-option -sa terminal-features ',xterm-kitty:RGB'

# Habilitar suporte ao mouse
set -g mouse on

# Configurar o tema Catppuccin (mocha)
set -g @catppuccin_flavour 'mocha'

# Definir a barra de status no topo da tela
set -g status-position top

# ==========================
# Atalhos de Navegação
# ==========================

# Remover o prefixo padrão (Ctrl-b)
unbind C-b

# Definir o prefixo como Ctrl-Espaço
set -g prefix C-Space
bind C-Space send-prefix

# Navegação entre painéis no estilo Vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Navegação entre painéis usando Alt + setas
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Navegação entre janelas usando Shift + setas
bind -n S-Left previous-window
bind -n S-Right next-window

# Atalhos alternativos para troca de janelas com Alt + h/l
bind -n M-H previous-window
bind -n M-L next-window

# Configurar índices de janelas e painéis para começarem em 1
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Divisão de janelas mantendo o diretório atual
bind | split-window -h -c "#{pane_current_path}" # Horizontal
bind _ split-window -v -c "#{pane_current_path}" # Vertical

# ==========================
# Configuração de Modo de Cópia
# ==========================

# Ativar modo Vi para seleção de texto
set-window-option -g mode-keys vi

# Atalhos para modo de cópia no estilo Vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Configuração de cópia para Wayland (usando wl-copy)
if -b '[ "$XDG_SESSION_TYPE" = "wayland" ] && command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'

# Gerenciar buffers de cópia
bind b list-buffers
bind p paste-buffer -p
bind P choose-buffer

# ==========================
# Configuração de Plugins
# ==========================

# Plugins usados no tmux
set -g @plugin 'tmux-plugins/tpm'                # Plugin Manager
set -g @plugin 'tmux-plugins/tmux-sensible'      # Configurações sensatas para tmux
set -g @plugin 'dreamsofcode-io/catppuccin-tmux' # Tema Catppuccin para tmux
set -g @plugin 'christoomey/vim-tmux-navigator'  # Navegação estilo Vim entre tmux e vim
set -g @plugin 'tmux-plugins/tmux-yank'          # Copiar para o sistema operacional

# Inicializar o Plugin Manager
run '~/.tmux/plugins/tpm/tpm'

# ==========================
# Configurações Avançadas
# ==========================

# Configurações automáticas para variáveis de ambiente
%if #{==:#{TMUX_PROGRAM},}
  run "exec sh -c 'TMUX_PROGRAM=\"\$(LSOF=\$(PATH=\"\$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\" command -v lsof); \$LSOF -b -w -a -d txt -p #{pid} -Fn 2>/dev/null | perl -n -e \"if (s/^n((?:.(?!dylib\$|so\$))+)\$/\\1/g && s/(?:\s+\\([^\\s]+?\\))?\$//g) { print; exit } } exit 1; {\" 2>/dev/null || readlink \"/proc/#{pid}/exe\" 2>/dev/null)\"; [ x\"\$(\"\$TMUX_PROGRAM\" display -p \"#{l:#{pid}}\" 2>/dev/null)\" = x\"#{pid}\" ] || TMUX_PROGRAM=\"\$(command -v tmux || printf tmux)\"; \"\$TMUX_PROGRAM\" -S #{socket_path} set-environment -g TMUX_PROGRAM \"\$TMUX_PROGRAM\"'"
%endif

# Verificar e configurar TMUX_SOCKET
%if #{==:#{TMUX_SOCKET},}
  run "exec sh -c '\"\$TMUX_PROGRAM\" -S #{socket_path} set-environment -g TMUX_SOCKET \"#{socket_path}\"'"
%endif

# Configurar TMUX_CONF
%if #{==:#{TMUX_CONF},}
  run "exec sh -c '\"\$TMUX_PROGRAM\" set-environment -g TMUX_CONF \$(for conf in \"\$HOME/.tmux.conf\" \"\$XDG_CONFIG_HOME/tmux/tmux.conf\" \"\$HOME/.config/tmux/tmux.conf\"; do [ -f \"\$conf\" ] && printf \"%s\" \"\$conf\" && break; done)'"
%endif

# Configurar TMUX_CONF_LOCAL
%if #{==:#{TMUX_CONF_LOCAL},}
  run "exec sh -c '\"\$TMUX_PROGRAM\" set-environment -g TMUX_CONF_LOCAL \"\$TMUX_CONF.local\"'"
%endif

# Aplicar configurações locais
run '"$TMUX_PROGRAM" -S #{socket_path} source "$TMUX_CONF_LOCAL"'
run 'cut -c3- "$TMUX_CONF" | sh -s _apply_configuration'
